---
layout: post
title:  "Work diary 2020/09/25"
categories: 
---

今日は何を考えよう．
とりあえず作業日誌をGithub Pages上で公開することにした．

## 測度論

集合の大きさと言ってもどうやって測ろう．
今日はなんか数学者のクセみたいなのを見つけた．

まず，$\sigma$で大きさを測ることができる集合が存在するとする．
次に，よくわからん集合$X$があるとする．
そのよくわからん集合を包むことのできる，$\sigma$で測ることのできる集合の全体を$\mathscr{S}(X)$と書くことにする．

$X$の大きさ$\|X\|_e$を以下のように定義する．

$$
\begin{aligned}
|X|_e = \inf \left\{\sigma(S) | S \in \mathscr{S}(X)\right\}
\end{aligned}
$$

要は，$X$の大きさを，最もコンパクトに包める$\sigma$で測ることのできる集合の大きさとしてしまおうという考えだ．こういう定義の仕方は結構数学書で出てくる．

大きさを測ることのできる集合となってくると，必然的に興味は$\mathbb{R}^d$になる．

ルベーグ積分概論（柴田著）では，左半開区間$\prod_{j=1}^d (a_j, b_j]$をベースに理論を構築している．左半開区間$\prod_{j=1}^d (a_j, b_j]$の体積$\sigma$を以下のように定義する．

$$
\begin{aligned}
\sigma(\prod_{j=1}^d (a_j, b_j]) = \prod_{j=1}^d (b_j - a_j)
\end{aligned}
$$

よくわからん$\mathbb{R}^d$の部分集合を左半開区間で包むことができれば，大きさを計算できる．

理論を構築するのと実際に計算するってのはかなりギャップがある．そこのギャップを埋めるにはそれなりのテクニックが必要となってくる．

上から下に降っていく勉強法が自分には合っている気がする．そこで，測度論・確率論のアプリケーションとして統計学を覗いてみる．

### コイン投げ

- $(\Omega, \mathcal{F}, P)$: 確率空間
- $(\mathcal{X}, \mathcal{F}_{\mathcal{X}})$: 可測空間
- $X: \Omega \rightarrow \mathcal{X}$: 確率変数（$\mathcal{F}$-可測）

$\mathcal{X} = \left\\{0, 1\right\\}$として，0を裏，1を表に対応させる．

## 量子力学

## 開発

### yarnのアップグレード

`1.22.4 -> 1.22.5`

```
yarn --version
brew upgrade yarn
brew link --overwrite yarn
yarn --version
```

### vue cliのアップグレード

`@vue/cli 4.4.1 -> @vue/cli 4.5.6`

```
vue --version
yarn global upgrade --latest @vue/cli
vue --version
```

### 新しいelectron-vueアプリケーションの作成（名称未定）

これからは，実装した機械学習手法をデスクトップアプリケーションとして提供することにする．そのための雛形を作る．後々cookiecutterとかでいい感じに生成できるようにする．

機械学習手法の実装はPythonでやりたいのだが，うまく作ったとしても動かすにはDockerを入れてもらう必要がある．Windowsユーザのことを考えるとこの要件はかなりきついように思える．こちら側でサーバを用意するのは辛いので，サーバサイドアプリケーションととデスクトップアプリケーションを分けて提供するようにしよう．用意したサーバにDocker入れてもらって，各デスクトップアプリケーションから呼ぶ感じにしてもらう．

リポジトリ的にはシンプルに，

- `<application_name>-server`
- `<application_name>-desktop`

の二つを用意することにする．
今週来週あたりにサンプルとして，推薦システムを作成してみよう．

